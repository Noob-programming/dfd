using itemStock.Forms.InterFaces;
using itemStock.Logic.Presnter;
using System;
using System.Collections.Generic;
using System.Windows.Forms;
using itemStock.Model;

namespace itemStock.Forms
{
	public partial class Frm_Stock : DevExpress.XtraEditors.XtraForm, IStock
	{
		private StockPresnter presnter;


		public Frm_Stock()
		{
			InitializeComponent();
			presnter = new StockPresnter(this);
			// This line of code is generated by Data Source Configuration Wizard
			//tB_StockItemTableAdapter1.Fill(bills1.TB_StockItem);
		}

		private void Frm_Stock_Load(object sender, EventArgs e)
		{
			// TODO: This line of code loads data into the 'bills.TB_StockItem' table. You can move, or remove it, as needed.
			//this.tB_StockItemTableAdapter.Fill(this.bills.TB_StockItem);

			presnter.GetData();

		}

		private void simpleButton1_Click(object sender, EventArgs e)
		{
			try
			{
				bool save = presnter.Save();
				MessageBox.Show(!save ? @"error" : @"save done");
				presnter.GetData();

			}
			catch (Exception exception)
			{
				System.Windows.Forms.MessageBox.Show($@"{exception}");
			}
		}

		/// <inheritdoc />
		public Guid ItemGuid
		{
			get => Guid.Parse(txtGuid.Text);
			set => txtGuid.Text = value.ToString();
		}

		/// <inheritdoc />



		/// <inheritdoc />
		public int Quintity
		{
			get => Convert.ToInt32(txtQuin.Text);
			set => txtQuin.Text = value.ToString();

		}

		/// <inheritdoc />
		public object Dgv
		{
			get => gcStock.DataSource;
			set => gcStock.DataSource = value;
		}
		public string status
		{
			set
			{
				if (value != null) 
					cbxStatus.Properties.DataSource = presnter.FillCbx();
			}

			get=>;
		}

		/// <inheritdoc />
		public object CbxDisplayName
		{
			get  ;
			set  ;
		}

		private void gvStock_FocusedRowChanged(object sender, DevExpress.XtraGrid.Views.Base.FocusedRowChangedEventArgs e)
		{
			txtGuid.Text = gvStock.
				GetFocusedRowCellValue("itemGuid").ToString();
			txtQuin.Text = gvStock.
				GetFocusedRowCellValue("Quintity").ToString();
			cbxStatus.EditValue = gvStock.
				GetFocusedRowCellValue("status").ToString();
		}
	}
}