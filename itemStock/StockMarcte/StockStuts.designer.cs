#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StockMarcte
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Bills")]
	public partial class StockStutsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTB_Item(TB_Item instance);
    partial void UpdateTB_Item(TB_Item instance);
    partial void DeleteTB_Item(TB_Item instance);
    partial void InsertTB_Bill(TB_Bill instance);
    partial void UpdateTB_Bill(TB_Bill instance);
    partial void DeleteTB_Bill(TB_Bill instance);
    partial void InsertTB_Billitem(TB_Billitem instance);
    partial void UpdateTB_Billitem(TB_Billitem instance);
    partial void DeleteTB_Billitem(TB_Billitem instance);
    #endregion
		
		public StockStutsDataContext() : 
				base(global::StockMarcte.Properties.Settings.Default.BillsConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public StockStutsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StockStutsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StockStutsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StockStutsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TB_StockItem> TB_StockItems
		{
			get
			{
				return this.GetTable<TB_StockItem>();
			}
		}
		
		public System.Data.Linq.Table<TB_Item> TB_Items
		{
			get
			{
				return this.GetTable<TB_Item>();
			}
		}
		
		public System.Data.Linq.Table<View_Stock_Item> View_Stock_Items
		{
			get
			{
				return this.GetTable<View_Stock_Item>();
			}
		}
		
		public System.Data.Linq.Table<TB_Bill> TB_Bills
		{
			get
			{
				return this.GetTable<TB_Bill>();
			}
		}
		
		public System.Data.Linq.Table<TB_Billitem> TB_Billitems
		{
			get
			{
				return this.GetTable<TB_Billitem>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_StockItem")]
	public partial class TB_StockItem
	{
		
		private System.Guid _itemGuid;
		
		private string _status;
		
		private int _Quintity;
		
		public TB_StockItem()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemGuid", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid itemGuid
		{
			get
			{
				return this._itemGuid;
			}
			set
			{
				if ((this._itemGuid != value))
				{
					this._itemGuid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this._status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quintity", DbType="Int NOT NULL")]
		public int Quintity
		{
			get
			{
				return this._Quintity;
			}
			set
			{
				if ((this._Quintity != value))
				{
					this._Quintity = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_Item")]
	public partial class TB_Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _itemGuid;
		
		private int _itemcode;
		
		private string _itemName;
		
		private System.Nullable<decimal> _itemPrice;
		
		private System.Nullable<decimal> _itemPriceSingle;
		
		private System.Nullable<decimal> _itemPriceMany;
		
		private System.Nullable<System.Guid> _parentGuid;
		
		private bool _ISGroup;
		
		private System.DateTime _DateOfInsert;
		
		private EntitySet<TB_Billitem> _TB_Billitems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnitemGuidChanging(System.Guid value);
    partial void OnitemGuidChanged();
    partial void OnitemcodeChanging(int value);
    partial void OnitemcodeChanged();
    partial void OnitemNameChanging(string value);
    partial void OnitemNameChanged();
    partial void OnitemPriceChanging(System.Nullable<decimal> value);
    partial void OnitemPriceChanged();
    partial void OnitemPriceSingleChanging(System.Nullable<decimal> value);
    partial void OnitemPriceSingleChanged();
    partial void OnitemPriceManyChanging(System.Nullable<decimal> value);
    partial void OnitemPriceManyChanged();
    partial void OnparentGuidChanging(System.Nullable<System.Guid> value);
    partial void OnparentGuidChanged();
    partial void OnISGroupChanging(bool value);
    partial void OnISGroupChanged();
    partial void OnDateOfInsertChanging(System.DateTime value);
    partial void OnDateOfInsertChanged();
    #endregion
		
		public TB_Item()
		{
			this._TB_Billitems = new EntitySet<TB_Billitem>(new Action<TB_Billitem>(this.attach_TB_Billitems), new Action<TB_Billitem>(this.detach_TB_Billitems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemGuid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid itemGuid
		{
			get
			{
				return this._itemGuid;
			}
			set
			{
				if ((this._itemGuid != value))
				{
					this.OnitemGuidChanging(value);
					this.SendPropertyChanging();
					this._itemGuid = value;
					this.SendPropertyChanged("itemGuid");
					this.OnitemGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemcode", DbType="Int NOT NULL")]
		public int itemcode
		{
			get
			{
				return this._itemcode;
			}
			set
			{
				if ((this._itemcode != value))
				{
					this.OnitemcodeChanging(value);
					this.SendPropertyChanging();
					this._itemcode = value;
					this.SendPropertyChanged("itemcode");
					this.OnitemcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemName", DbType="NVarChar(100)")]
		public string itemName
		{
			get
			{
				return this._itemName;
			}
			set
			{
				if ((this._itemName != value))
				{
					this.OnitemNameChanging(value);
					this.SendPropertyChanging();
					this._itemName = value;
					this.SendPropertyChanged("itemName");
					this.OnitemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemPrice", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> itemPrice
		{
			get
			{
				return this._itemPrice;
			}
			set
			{
				if ((this._itemPrice != value))
				{
					this.OnitemPriceChanging(value);
					this.SendPropertyChanging();
					this._itemPrice = value;
					this.SendPropertyChanged("itemPrice");
					this.OnitemPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemPriceSingle", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> itemPriceSingle
		{
			get
			{
				return this._itemPriceSingle;
			}
			set
			{
				if ((this._itemPriceSingle != value))
				{
					this.OnitemPriceSingleChanging(value);
					this.SendPropertyChanging();
					this._itemPriceSingle = value;
					this.SendPropertyChanged("itemPriceSingle");
					this.OnitemPriceSingleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemPriceMany", DbType="Decimal(10,2)")]
		public System.Nullable<decimal> itemPriceMany
		{
			get
			{
				return this._itemPriceMany;
			}
			set
			{
				if ((this._itemPriceMany != value))
				{
					this.OnitemPriceManyChanging(value);
					this.SendPropertyChanging();
					this._itemPriceMany = value;
					this.SendPropertyChanged("itemPriceMany");
					this.OnitemPriceManyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_parentGuid", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> parentGuid
		{
			get
			{
				return this._parentGuid;
			}
			set
			{
				if ((this._parentGuid != value))
				{
					this.OnparentGuidChanging(value);
					this.SendPropertyChanging();
					this._parentGuid = value;
					this.SendPropertyChanged("parentGuid");
					this.OnparentGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ISGroup", DbType="Bit NOT NULL")]
		public bool ISGroup
		{
			get
			{
				return this._ISGroup;
			}
			set
			{
				if ((this._ISGroup != value))
				{
					this.OnISGroupChanging(value);
					this.SendPropertyChanging();
					this._ISGroup = value;
					this.SendPropertyChanged("ISGroup");
					this.OnISGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfInsert", DbType="Date NOT NULL")]
		public System.DateTime DateOfInsert
		{
			get
			{
				return this._DateOfInsert;
			}
			set
			{
				if ((this._DateOfInsert != value))
				{
					this.OnDateOfInsertChanging(value);
					this.SendPropertyChanging();
					this._DateOfInsert = value;
					this.SendPropertyChanged("DateOfInsert");
					this.OnDateOfInsertChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_Item_TB_Billitem", Storage="_TB_Billitems", ThisKey="itemGuid", OtherKey="itemGuid")]
		public EntitySet<TB_Billitem> TB_Billitems
		{
			get
			{
				return this._TB_Billitems;
			}
			set
			{
				this._TB_Billitems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TB_Billitems(TB_Billitem entity)
		{
			this.SendPropertyChanging();
			entity.TB_Item = this;
		}
		
		private void detach_TB_Billitems(TB_Billitem entity)
		{
			this.SendPropertyChanging();
			entity.TB_Item = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.View_Stock_Item")]
	public partial class View_Stock_Item
	{
		
		private string _itemName;
		
		private string _status;
		
		public View_Stock_Item()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemName", DbType="NVarChar(100)")]
		public string itemName
		{
			get
			{
				return this._itemName;
			}
			set
			{
				if ((this._itemName != value))
				{
					this._itemName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this._status = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_Bill")]
	public partial class TB_Bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _BillGuid;
		
		private int _Billcode;
		
		private System.Nullable<System.DateTime> _BillDate;
		
		private string _Notes;
		
		private bool _BillType;
		
		private EntitySet<TB_Billitem> _TB_Billitems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBillGuidChanging(System.Guid value);
    partial void OnBillGuidChanged();
    partial void OnBillcodeChanging(int value);
    partial void OnBillcodeChanged();
    partial void OnBillDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBillDateChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnBillTypeChanging(bool value);
    partial void OnBillTypeChanged();
    #endregion
		
		public TB_Bill()
		{
			this._TB_Billitems = new EntitySet<TB_Billitem>(new Action<TB_Billitem>(this.attach_TB_Billitems), new Action<TB_Billitem>(this.detach_TB_Billitems));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillGuid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid BillGuid
		{
			get
			{
				return this._BillGuid;
			}
			set
			{
				if ((this._BillGuid != value))
				{
					this.OnBillGuidChanging(value);
					this.SendPropertyChanging();
					this._BillGuid = value;
					this.SendPropertyChanged("BillGuid");
					this.OnBillGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Billcode", DbType="Int NOT NULL")]
		public int Billcode
		{
			get
			{
				return this._Billcode;
			}
			set
			{
				if ((this._Billcode != value))
				{
					this.OnBillcodeChanging(value);
					this.SendPropertyChanging();
					this._Billcode = value;
					this.SendPropertyChanged("Billcode");
					this.OnBillcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BillDate
		{
			get
			{
				return this._BillDate;
			}
			set
			{
				if ((this._BillDate != value))
				{
					this.OnBillDateChanging(value);
					this.SendPropertyChanging();
					this._BillDate = value;
					this.SendPropertyChanged("BillDate");
					this.OnBillDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillType", DbType="Bit NOT NULL")]
		public bool BillType
		{
			get
			{
				return this._BillType;
			}
			set
			{
				if ((this._BillType != value))
				{
					this.OnBillTypeChanging(value);
					this.SendPropertyChanging();
					this._BillType = value;
					this.SendPropertyChanged("BillType");
					this.OnBillTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_Bill_TB_Billitem", Storage="_TB_Billitems", ThisKey="BillGuid", OtherKey="BillGuid")]
		public EntitySet<TB_Billitem> TB_Billitems
		{
			get
			{
				return this._TB_Billitems;
			}
			set
			{
				this._TB_Billitems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TB_Billitems(TB_Billitem entity)
		{
			this.SendPropertyChanging();
			entity.TB_Bill = this;
		}
		
		private void detach_TB_Billitems(TB_Billitem entity)
		{
			this.SendPropertyChanging();
			entity.TB_Bill = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TB_Billitems")]
	public partial class TB_Billitem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _BillitemGuid;
		
		private int _BillitemID;
		
		private System.Nullable<System.Guid> _BillGuid;
		
		private System.Nullable<System.Guid> _itemGuid;
		
		private int _Quantity;
		
		private decimal _Price;
		
		private decimal _Total;
		
		private EntityRef<TB_Bill> _TB_Bill;
		
		private EntityRef<TB_Item> _TB_Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBillitemGuidChanging(System.Guid value);
    partial void OnBillitemGuidChanged();
    partial void OnBillitemIDChanging(int value);
    partial void OnBillitemIDChanged();
    partial void OnBillGuidChanging(System.Nullable<System.Guid> value);
    partial void OnBillGuidChanged();
    partial void OnitemGuidChanging(System.Nullable<System.Guid> value);
    partial void OnitemGuidChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    partial void OnPriceChanging(decimal value);
    partial void OnPriceChanged();
    partial void OnTotalChanging(decimal value);
    partial void OnTotalChanged();
    #endregion
		
		public TB_Billitem()
		{
			this._TB_Bill = default(EntityRef<TB_Bill>);
			this._TB_Item = default(EntityRef<TB_Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillitemGuid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid BillitemGuid
		{
			get
			{
				return this._BillitemGuid;
			}
			set
			{
				if ((this._BillitemGuid != value))
				{
					this.OnBillitemGuidChanging(value);
					this.SendPropertyChanging();
					this._BillitemGuid = value;
					this.SendPropertyChanged("BillitemGuid");
					this.OnBillitemGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillitemID", DbType="Int NOT NULL")]
		public int BillitemID
		{
			get
			{
				return this._BillitemID;
			}
			set
			{
				if ((this._BillitemID != value))
				{
					this.OnBillitemIDChanging(value);
					this.SendPropertyChanging();
					this._BillitemID = value;
					this.SendPropertyChanged("BillitemID");
					this.OnBillitemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BillGuid", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> BillGuid
		{
			get
			{
				return this._BillGuid;
			}
			set
			{
				if ((this._BillGuid != value))
				{
					if (this._TB_Bill.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBillGuidChanging(value);
					this.SendPropertyChanging();
					this._BillGuid = value;
					this.SendPropertyChanged("BillGuid");
					this.OnBillGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_itemGuid", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> itemGuid
		{
			get
			{
				return this._itemGuid;
			}
			set
			{
				if ((this._itemGuid != value))
				{
					if (this._TB_Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnitemGuidChanging(value);
					this.SendPropertyChanging();
					this._itemGuid = value;
					this.SendPropertyChanged("itemGuid");
					this.OnitemGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(10,2) NOT NULL")]
		public decimal Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Total", DbType="Decimal(10,2) NOT NULL")]
		public decimal Total
		{
			get
			{
				return this._Total;
			}
			set
			{
				if ((this._Total != value))
				{
					this.OnTotalChanging(value);
					this.SendPropertyChanging();
					this._Total = value;
					this.SendPropertyChanged("Total");
					this.OnTotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_Bill_TB_Billitem", Storage="_TB_Bill", ThisKey="BillGuid", OtherKey="BillGuid", IsForeignKey=true, DeleteRule="CASCADE")]
		public TB_Bill TB_Bill
		{
			get
			{
				return this._TB_Bill.Entity;
			}
			set
			{
				TB_Bill previousValue = this._TB_Bill.Entity;
				if (((previousValue != value) 
							|| (this._TB_Bill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TB_Bill.Entity = null;
						previousValue.TB_Billitems.Remove(this);
					}
					this._TB_Bill.Entity = value;
					if ((value != null))
					{
						value.TB_Billitems.Add(this);
						this._BillGuid = value.BillGuid;
					}
					else
					{
						this._BillGuid = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("TB_Bill");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TB_Item_TB_Billitem", Storage="_TB_Item", ThisKey="itemGuid", OtherKey="itemGuid", IsForeignKey=true, DeleteRule="CASCADE")]
		public TB_Item TB_Item
		{
			get
			{
				return this._TB_Item.Entity;
			}
			set
			{
				TB_Item previousValue = this._TB_Item.Entity;
				if (((previousValue != value) 
							|| (this._TB_Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TB_Item.Entity = null;
						previousValue.TB_Billitems.Remove(this);
					}
					this._TB_Item.Entity = value;
					if ((value != null))
					{
						value.TB_Billitems.Add(this);
						this._itemGuid = value.itemGuid;
					}
					else
					{
						this._itemGuid = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("TB_Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
